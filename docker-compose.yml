version: '3'
services:
  # frontend vuejs
  front:
    build:
      context: ./time_manager_front
    # bind host machine port 8080 to the 8080 port of the container
    ports:
      - "8080:8080"
    # specify network so frontend can't access directly to the database
    networks:
      - front-network
    # using volume so we don't have to rebuild container after code modifications
    volumes:
      - ./time_manager_front:/app
    restart: unless-stopped

  nginx:
    image: nginx:1.17.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - front-network
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - front-network
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  back:
    build:
      context: ./time_manager_api
    # bind host machine port 3000 to the 3000 port of the container
    ports:
      - "3000:3000"
    # using env variable to speed up API as it is advised in documentation
    environment:
      - NODE_ENV=production
    networks:
      - back-network
      - front-network
    # using volume so we don't have to rebuild container after code modifications
    volumes:
      - ./time_manager_api:/usr/app/time_manager/
    restart: unless-stopped

  bdd:
    image: postgres:latest
    # postgres env variable to create gotham db so the API doesn't have to
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_DB=gotham"
    expose:
      - 5432
    networks:
      - back-network
    # volume for persistent database data
    volumes: 
      - gotham-data:/var/lib/postgresql/data
    restart: unless-stopped

networks:
  back-network:
  front-network:

volumes:
  gotham-data:
